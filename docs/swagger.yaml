definitions:
  entity.Error:
    properties:
      error:
        type: string
    type: object
  entity.Message:
    properties:
      message:
        type: string
    type: object
  entity.Song:
    properties:
      created_at:
        description: Время создания записи
        type: string
      groups:
        description: Название группы
        type: string
      id:
        description: Уникальный идентификатор
        type: string
      link:
        description: Ссылка на дополнительные данные
        type: string
      release_date:
        description: Дата выпуска
        type: string
      song:
        description: Название песни
        type: string
      text:
        description: Текст песни
        type: string
      updated_at:
        description: Время последнего обновления
        type: string
    type: object
  entity.Song1:
    properties:
      groups:
        description: Название группы
        type: string
      link:
        description: Ссылка на дополнительные данные
        type: string
      release_date:
        description: Дата выпуска
        type: string
      song:
        description: Название песни
        type: string
      text:
        description: Текст песни
        type: string
    type: object
  entity.UpdateSong1:
    properties:
      groups:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
info:
  contact: {}
  description: API for managing an online music library
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Get all songs with optional filters
      parameters:
      - description: Group name filter
        in: query
        name: groups
        type: string
      - description: Song title filter
        in: query
        name: title
        type: string
      - description: Release date filter
        in: query
        name: release_date
        type: string
      - description: Text filter
        in: query
        name: text
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: List all songs
      tags:
      - Song
    post:
      consumes:
      - application/json
      description: Create a new song with details like title, group, release date,
        etc.
      parameters:
      - description: Create song
        in: body
        name: CreateSong
        required: true
        schema:
          $ref: '#/definitions/entity.Song1'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Song'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Create a new song
      tags:
      - Song
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Delete a song
      tags:
      - Song
    get:
      consumes:
      - application/json
      description: Fetch song details by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Song'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Get song details by ID
      tags:
      - Song
    put:
      consumes:
      - application/json
      description: Update details of an existing song
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated song data
        in: body
        name: UpdateSong
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateSong1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Song'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Update song data
      tags:
      - Song
  /songs/{id}/paginate:
    get:
      consumes:
      - application/json
      description: Paginate the lyrics text for a specific song by verse.
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Number of verses per page
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Paginated lyrics text
          schema:
            type: string
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/entity.Error'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Paginate text
      tags:
      - Song
swagger: "2.0"
